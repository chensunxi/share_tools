name: Build macOS Universal2 Executable

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]  # 分两个架构编译
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Clean environment
        run: |
          rm -rf venv/

      - name: Build per-architecture
        env:
          ARCH: ${{ matrix.arch }}  # 当前架构
        run: |
          # 创建虚拟环境
          python -m venv venv-$ARCH
          source venv-$ARCH/bin/activate

          # 安装依赖（单架构模式）
          export ARCHFLAGS="-arch $ARCH"
          pip install --upgrade pip setuptools wheel
          pip install pandas numpy --no-binary pandas,numpy  # 允许源码编译
          pip install -r requirements.txt

          # 构建单架构可执行文件（完整参数）
          pyinstaller \
            --onefile \
            --name myapp-$ARCH \
            --target-architecture=$ARCH \
            --hidden-import=selenium \
            --hidden-import=platform \
            --hidden-import=certifi \
            --hidden-import=urllib3 \
            --hidden-import=sysconfig \
            --hidden-import=pkgutil \
            --hidden-import=uuid \
            --hidden-import=websocket \
            --hidden-import=xml.dom \
            --hidden-import=pandas \
            --hidden-import=pandas._libs.writers \
            --hidden-import=logging.handlers \
            --hidden-import=tkinter \
            --hidden-import=tkinter.filedialog \
            --collect-data=tkinter \
            --add-data "venv-$ARCH/lib/python3.11/site-packages/selenium:selenium" \
            --add-binary "venv-$ARCH/lib/python3.11/site-packages/selenium/webdriver/common/:selenium/webdriver/common" \
            --add-data "social_download:social_download" \
            --add-data "utils:utils" \
            --add-data "gui:gui" \
            --add-data "bidding_docx:bidding_docx" \
            --add-data "social_desensitize:social_desensitize" \
            --add-data "resources:resources" \
            --clean \
            --noconfirm \
            --distpath dist-$ARCH \
            --workpath build-$ARCH \
            share_main.py

      - name: Merge universal binary
        if: matrix.arch == 'x86_64'  # 仅在最后一个任务合并
        run: |
          # 合并两个架构的二进制
          lipo -create \
            dist-x86_64/myapp-x86_64 \
            dist-arm64/myapp-arm64 \
            -output dist/myapp-universal

          # 验证合并结果
          lipo -info dist/myapp-universal

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app-universal
          path: dist/myapp-universal
