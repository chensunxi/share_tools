name: Build macOS Universal Executable (Precompiled Binaries)

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Clean environment
        run: |
          rm -rf dist/ build/

      - name: Install dependencies
        run: |
          # 使用预编译的二进制包（关键）
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt  # 确保 requirements.txt 包含 numpy, pandas, selenium 等

      - name: Build Universal2 executable
        run: |
          # 直接生成 Universal2 二进制（无需分架构）
          pyinstaller \
            --onefile \
            --name myapp-universal \
            --target-arch universal2 \  # 关键参数
            --hidden-import=selenium \
            --hidden-import=tkinter \
            --hidden-import=tkinter.filedialog \
            --hidden-import=logging.handlers \
            --hidden-import=pandas._libs.writers \
            --collect-data=tkinter \
            --add-data "social_download:social_download" \
            --add-data "utils:utils" \
            --add-data "gui:gui" \
            --add-data "bidding_docx:bidding_docx" \
            --add-data "social_desensitize:social_desensitize" \
            --add-data "resources:resources" \
            --clean \
            --noconfirm \
            share_main.py

      - name: Verify binary architecture
        run: |
          lipo -info dist/myapp-universal  # 应输出 "x86_64 arm64"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app-universal
          path: dist/myapp-universal
